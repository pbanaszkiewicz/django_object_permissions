Usage
=====


Registering permissions
~~~~~~~~~~~~~~~~~~~~~~~

Permissions must be registered before they can be used. This must be done in
``models.py``, and can only be done once per model

.. code-block:: python

    from object_permissions import register

    register(['view','edit','delete'], MyModel)

A Model will be dynamically generated to hold permissions for your model.  This
allows direct relationships between users, permissions, and models without the
limitations of the ContentTypes framework.  Changing permissions for a model
requires you to delete or modify the database table.

.. code-block:: python

    class MyModel_perm(models.Model):
        """ example model generated by object permissions """
        user = models.ForeignKey(User, related_name='MyModel_uperms', null=True)
        group = models.ForeignKey(UserGroup, related_name='MyModel_gperms', null=True)
        obj = models.ForeignKey(MyModel, related_name='operms')

        # permissions
        view = models.BooleanField()
        edit = models.BooleanField()
        delete = models.BooleanField()


Settings permissions
~~~~~~~~~~~~~~~~~~~~

.. automodule:: object_permissions.registration
    :members: grant, revoke, set_perms, revoke_all


Retrieving permissions
~~~~~~~~~~~~~~~~~~~~~~

.. automodule:: object_permissions.registration
    :members: get_perms, get_model_perms
